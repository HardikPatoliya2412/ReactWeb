{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","components/Contect.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","useState","color","backgroundColor","mystyle","setmystyle","btn","setbtn","className","style","mode","heading","id","type","onClick","border","Navbar","href","title","to","aboutus","togglemode","role","title1","TextForm","text","setText","onChange","event","console","log","target","value","rows","newtext","toUpperCase","toLowerCase","split","length","Alert","alert","msg","Contect","for","placeholder","prototype","PropTypes","string","App","setmode","settitle","setalert","showAlert","message","contectus","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3fb0a1c5.chunk.js","sourcesContent":["import React,{useState} from 'react'\n\nexport default function About(props) {\n   \n     const [mystyle, setmystyle] = useState({\n        color:'black',\n        backgroundColor:'skyblue'\n\n     })\n\n     const [btn, setbtn] = useState('Enable Dark Mode')\n\n     const dark = ()=>\n     {\n        if(mystyle.color ==='black' ){\n\n            setmystyle( {\n                color:'white',\n                backgroundColor:'black'\n            })\n            setbtn('Enable Skyblue Mode')\n\n        }\n        else\n        {\n             setmystyle({\n                color:'black',\n                backgroundColor:'skyblue',\n                border:'1px solid black'\n             })\n\n             setbtn('Enable Dark Mode')\n        }\n     }\n\n    return (\n        <div className='container' style={{mystyle,color:props.mode === \"light\" ? 'black':'white'}} > \n            <h2>{props.heading}</h2>\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                        <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            Accordion Item #1\n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={mystyle}>\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                            Accordion Item #2\n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={mystyle} >\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            Accordion Item #3\n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={mystyle}>\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" onClick={dark} className=\"btn btn-primary my-3\">{btn}</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n        <div>\n\n         {/* <img src=\"https://gpt3-jsm.com/static/media/ai.aa60586b.png\"/> */}\n\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}  `}>\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/TextForms\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutus} </Link>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link \"  to=\"/contect\">Contect</Link>\n                            </li>\n                            \n                            \n                        </ul>\n                        <form className=\"d-flex\">\n\n                            <div className={`form-check form-switch mx-1 text-${props.mode === 'light' ? 'dark':'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\"  role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n                            <label className=\"form-check-label\" >{props.title1}</label>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nNavbar.prototype = {\n    title:PropTypes.string,\n    aboutus:PropTypes.string\n};","import React,{useState} from 'react'\n\nexport default function TextForm(props) {\n    const [text,setText]=useState('Enter text here')\n\n    const handleupclick = ()=>\n    {\n        let newtext = text.toUpperCase();\n        setText(newtext);\n    }\n\n\n    const lowercase = ()=>\n    {\n        let newtext = text.toLowerCase();\n        setText(newtext);\n    }\n    \n    const onchang = (event) =>\n    {\n     console.log(\"onchang\");\n        setText(event.target.value);\n    }\n    \n    return (\n        <>\n        <div className='container'>\n            <div >\n                 <h2 style={{color:props.mode === 'dark' ? 'white':'black'}}>{props.heading}</h2>\n                  <textarea className=\"form-control\" style={{backgroundColor:props.mode === 'dark' ? 'grey':'white',color:props.mode === 'dark' ? 'white':'black'}}  onChange={onchang} value={text} rows=\"8\"></textarea>\n            \n                  <button className=\"btn btn-primary mx-2 my-2\" onClick={handleupclick}>UPPERCASE</button>\n        \n                  <button className=\"btn btn-primary \" onClick={lowercase}>LOWERCASE</button>\n            </div>\n        </div>\n        <div className=\"container my-5\" style={{color:props.mode === 'dark' ? 'white':'black'}}>\n            <h1>Your Text summery</h1>\n            <p>{text.split(\" \").length}words and {text.length} characters</p>\n        </div>\n        </>\n    )  \n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n    return (\n        \n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{props.alert.type}</strong>:{props.alert.msg}\n                <button type=\"button\"  className=\"btn-close\" data-bs-fdismiss=\"alert\" aria-label=\"Close\"></button>\n            </div>\n    \n    );\n}\n","import React from \"react\";\n//import { Link } from 'react-router-dom';\n\nexport default function Contect() {\n    return (\n\n        <>\n            <div className=\"mb-3\">\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\n            </div>\n            <div className=\"mb-3\">\n                <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label>\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n            </div>\n         </>\n    );\n}\n\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Contect from \"./components/Contect\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [title1, settitle] = useState(\"Enable Dark Mode\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n  };\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      settitle(\"Enable Light Mode\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode has been anable\", \"success\");\n    } else {\n      setmode(\"light\");\n      settitle(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been anable\", \"danger\");\n    }\n  };\n\n  return (\n    <div>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutus=\"Aboutus\"\n          contectus=\"Contectus\"\n          mode={mode}\n          togglemode={togglemode}\n          title1={title1}\n        />\n\n        <div className=\"container\">\n          <Alert alert={alert} />\n        </div>\n      \n\n        <div className=\"container my-3\">\n          <Switch>\n\n            <Route path=\"/about\">\n              <About />\n            </Route>\n\n            <Route path=\"/contect\">\n              <Contect/>\n            </Route>\n            \n\n            <Route path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Text is hear\"\n                mode={mode}\n              />\n            </Route>\n\n           \n\n            \n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}